version: '2'

services:
  spark:
    image: docker.io/bitnami/spark
    user: root
    networks:
      project:
        ipv4_address: 172.1.0.2
    environment:
      - PYTHONIOENCODING=utf8
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./src:/src
      - ./tmp/streaming:/tmp/streaming
    ports:
      - '8282:8080'
      - '7077:7077'
  spark-worker-1:
    image: docker.io/bitnami/spark
    user: root
    networks:
      project:
        ipv4_address: 172.1.0.3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./src:/src
      - ./tmp/streaming:/tmp/streaming
  spark-worker-2:
    image: docker.io/bitnami/spark
    user: root
    networks:
      project:
        ipv4_address: 172.1.0.4
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./src:/src
      - ./tmp/streaming:/tmp/streaming
  mongodb:
    image: mongo:5
    restart: always
    networks:
      project:
        ipv4_address: 172.1.0.10
    ports:
      - '27017:27017'
    volumes:
      - ./mongodb/db:/data/db
  postgres:
    image: "postgres:13"
    environment:
      POSTGRES_DB: cap_project
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    networks:
      project:
        ipv4_address: 172.1.0.20
    ports:
      - "5432:5432"
    volumes:
    - ./pgdata:/var/lib/postgresql/data
  nomader:
    environment: 
        POSTGRES_DB: cap_project
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: postgres
        NODE_ENV: production
        DB_SECRET: iamasecret
        PORT: 8080
    platform: linux/amd64
    image: "kellychowkc/nomader:latest"
    depends_on: 
        - postgres
    build:
        context: ../backend/
        dockerfile: ./Dockerfile
    restart: always
    ports:
        - "8080:8080"
    networks:
      project:
        ipv4_address: 172.1.0.100

networks:
  project:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.1.0.0/24
